openapi: 3.0.0
servers: []
info:
  description: ""
  version: "1.0.0"
  title: プロ研Hub Web API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags: []

security:
  - Bearer: []

paths:
  /users:
    get:
      summary: ユーザー一覧
      description: Admin only
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        500:
          description: Internal server error
    post:
      summary: ユーザー登録
      security: []
      requestBody:
        $ref: "#/components/requestBodies/CreateUserBody"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWithToken"
        400:
          description: Invalid request
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error
    delete:
      summary: ユーザー削除
      description: "`user.name: admin`は削除不可"
      responses:
        204:
          description: Deleted
        401:
          description: Unauthorized
        404:
          description: Not found
        405:
          description: Method not allowed
        500:
          description: Internal server error

  /users/sign_in:
    post:
      summary: サインイン
      security: []
      requestBody:
        $ref: "#/components/requestBodies/LoginBody"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

  /users/{id}:
    get:
      summary: ユーザー詳細
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    patch:
      summary: ユーザー情報変更
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/UpdateUserBody"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWithToken"
        400:
          description: Invalid request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error
    delete:
      summary: ユーザー削除
      description: "`user.name: admin`は削除不可"
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        204:
          description: Deleted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

  /users/oauth2/{oauth_providers}/register:
    post:
      security: []
      parameters:
        - $ref: "#/components/parameters/oauth_providers"
      requestBody:
        $ref: "#/components/requestBodies/CreateUserOverOauth2Body"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserWithToken"
        404:
          description: Not found
        500:
          description: Internal server error

  /users/oauth2/{oauth_providers}:
    post:
      parameters:
        - $ref: "#/components/parameters/oauth_providers"
      requestBody:
        $ref: "#/components/requestBodies/OAuth2ConnectBody"
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
    delete:
      parameters:
        - $ref: "#/components/parameters/oauth_providers"
      responses:
        204:
          description: Deleted
        404:
          description: Not found
        500:
          description: Internal server error

  /events:
    get:
      summary: イベント一覧
      security: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
                example:
                  - id: 1
                    title: ITシステムの構造
                    speakers:
                      - id: 1
                        name: prc_hub_user
                        email: user@prchub.com
                        github_username: ecc-proken
                        twitter_id: ecc_prc
                        post_event_availabled: true
                        admin: false
                    location: "2302"
                    datetimes:
                      - id: 1
                        event_id: 1
                        start: "2022-05-16T17:15:00+0900"
                        end: "2022-05-16T18:00:00+0900"
                      - id: 2
                        event_id: 1
                        start: "2022-05-17T17:15:00+0900"
                        end: "2022-05-17T18:00:00+0900"
                      - id: 3
                        event_id: 1
                        start: "2022-05-20T18:45:00+0900"
                        end: "2022-05-20T19:30:00:00+0900"
                    published: true
                    completed: true
                    auto_notify_documents_enabled: true
                    documents:
                      - id: 1
                        name: スライド
                        url: https://github.com/ecc-proken/StudyGroup/blob/main/20220516-it_system/slide.pdf
                  - id: 2
                    title: Git/GitHubハンズオン
                    speakers:
                      - id: 1
                        name: prc_hub_user
                        email: user@prchub.com
                        github_username: ecc-proken
                        twitter_id: ecc_prc
                        post_event_availabled: true
                        admin: false
                    location: "2302"
                    datetimes:
                      - id: 4
                        event_id: 2
                        start: "2022-05-23T17:15:00+0900"
                        end: "2022-05-23T18:00:00+0900"
                      - id: 5
                        event_id: 2
                        start: "2022-05-24T17:15:00+0900"
                        end: "2022-05-24T18:00:00+0900"
                      - id: 6
                        event_id: 2
                        start: "2022-05-27T18:45:00+0900"
                        end: "2022-05-27T19:30:00:00+0900"
                    published: true
                    completed: true
                    auto_notify_documents_enabled: true
                    documents:
                      - id: 1
                        name: スライド
                        url: https://github.com/ecc-proken/StudyGroup/blob/main/20220523-git_hands_on/slide.pdf
                      - id: 2
                        name: ハンズオン資料
                        url: https://github.com/ecc-proken/StudyGroup/blob/main/20220523-git_hands_on/DOCUMENT.md
                  - id: 3
                    title: Webサーバハンズオン
                    speakers:
                      - id: 1
                        name: prc_hub_user
                        email: user@prchub.com
                        github_username: ecc-proken
                        twitter_id: ecc_prc
                        post_event_availabled: true
                        admin: false
                    location: "2302"
                    datetimes:
                      - id: 7
                        event_id: 3
                        start: "2022-06-17T18:45:00+0900"
                        end: "2022-06-17T19:30:00:00+0900"
                      - id: 8
                        event_id: 3
                        start: "2022-04-20T17:15:00+0900"
                        end: "2022-04-20T18:00:00+0900"
                      - id: 9
                        event_id: 3
                        start: "2022-04-21T17:15:00+0900"
                        end: "2022-04-21T18:00:00+0900"
                    published: true
                    completed: false
                    auto_notify_documents_enabled: true
        500:
          description: Internal server error
    post:
      summary: イベント登録
      requestBody:
        $ref: "#/components/requestBodies/CreateEventBody"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        400:
          description: Invalid request
        403:
          description: Forbidden
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

  /events/{id}:
    get:
      summary: イベント詳細
      security: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    patch:
      summary: イベント情報変更
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/UpdateEventBody"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        400:
          description: Invalid request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error
    delete:
      summary: イベント削除
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        204:
          description: Deleted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

  /events/{id}/{event_datetime_id}/join:
    post:
      summary: イベント参加登録
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/event_datetime_id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventParticipate"
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
    delete:
      summary: イベント参加登録解除
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/event_datetime_id"
      responses:
        204:
          description: Success
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error

  /events/{id}/documents:
    get:
      summary: イベント資料一覧
      parameters:
        - $ref: "#/components/parameters/id"
      security: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDocument"
        404:
          description: Not found
        500:
          description: Internal server error
    post:
      summary: イベント資料登録
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/CreateEventDocumentsBody"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDocument"
        400:
          description: Invalid request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error
    put:
      summary: イベント資料変更
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/CreateEventDocumentsBody"
      responses:
        200:
          description: Replaced
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDocument"
        400:
          description: Invalid request
        403:
          description: Forbidden
        404:
          description: Not found
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

  /events/{id}/webhook/line_notify:
    post:
      summary: イベント情報・アンケートURLの送信
      description: |
        アンケートURL・資料URLの送信。
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success
        400:
          description: Invalid request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

  /events/{id}/documents/webhook/line_notify:
    post:
      summary: 資料URLの送信
      description: |
        資料URLの送信。
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success
        400:
          description: Invalid request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        email:
          type: string
          format: email
        github_username:
          type: string
        twitter_id:
          type: string
        post_event_availabled:
          type: boolean
        admin:
          type: boolean
      required:
        - id
        - name
        - email
      example:
        id: 1
        name: prc_hub_user
        email: user@prchub.com
        github_username: ecc-proken
        twitter_id: ecc_prc
        post_event_availabled: true
        admin: false

    LoginBody:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
      example:
        email: user@prchub.com
        password: prc_hub

    UserWithToken:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        email:
          type: string
          format: email
        github_username:
          type: string
        twitter_id:
          type: string
        post_event_availabled:
          type: boolean
        admin:
          type: boolean
        token:
          type: string
      required:
        - id
        - name
        - email
        - token
      example:
        id: 1
        name: prc_hub_user
        email: user@prchub.com
        github_username: ecc-proken
        twitter_id: ecc_prc
        post_event_availabled: true
        admin: false
        token: HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH.PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP.DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD

    Token:
      type: object
      properties:
        token:
          type: string
      required:
        - token
      example:
        token: HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH.PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP.DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD

    CreateUserBody:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        github_username:
          type: string
        twitter_id:
          type: string
      required:
        - name
        - email
        - password
      example:
        name: prc_hub_user
        email: user@prchub.com
        password: prc_hub
        github_username: ecc-proken
        twitter_id: ecc_prc

    CreateUserOverOauth2Body:
      type: object
      properties:
        access_token:
          type: string
        expire_in:
          type: integer
        refresh_token:
          type: string
        refresh_token_expire_in:
          type: integer
        password:
          type: string
          format: password
          example: prc_hub
      required:
        - access_token
        - expire_in
        - refresh_token
        - password

    OAuth2ConnectBody:
      type: object
      properties:
        access_token:
          type: string
        expire_in:
          type: integer
        refresh_token:
          type: string
        refresh_token_expire_in:
          type: integer
      required:
        - access_token
        - expire_in
        - refresh_token

    UpdateUserBody:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        github_username:
          type: string
        twitter_id:
          type: string
        post_event_availabled:
          type: boolean
        admin:
          type: boolean
      example:
        name: prc_hub_user
        email: user@prchub.com
        password: prc_hub
        github_username: ecc-proken
        twitter_id: ecc_prc
        post_event_availabled: true
        admin: false

    Event:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        title:
          type: string
        speakers:
          type: array
          items:
            $ref: "#/components/schemas/User"
        location:
          type: string
        datetimes:
          type: array
          items:
            $ref: "#/components/schemas/EventDatetime"
        published:
          type: boolean
        completed:
          type: boolean
        auto_notify_documents_enabled:
          type: boolean
          description: |
            `true`の場合`event`情報更新後`completed: true`かつ`documents`がある場合にLINE notifyにリクエスト
        documents:
          type: array
          items:
            $ref: "#/components/schemas/EventDocument"
      required:
        - id
        - title
        - published
        - completed
        - auto_notify_documents_enabled
      example:
        id: 1
        title: ITシステムの構造
        speakers:
          - id: 1
            name: prc_hub_user
            email: user@prchub.com
            github_username: ecc-proken
            twitter_id: ecc_prc
            post_event_availabled: true
            admin: false
        location: "2302"
        datetimes:
          - id: 1
            event_id: 1
            start: "2022-05-16T17:15:00+0900"
            end: "2022-05-16T18:00:00+0900"
          - id: 2
            event_id: 1
            start: "2022-05-17T17:15:00+0900"
            end: "2022-05-17T18:00:00+0900"
        published: true
        completed: false
        auto_notify_documents_enabled: true
        documents:
          - id: 1
            name: スライド
            url: https://github.com/ecc-proken/StudyGroup/blob/main/20220516-it_system/slide.pdf

    CreateEventBody:
      type: object
      properties:
        title:
          type: string
        speakers:
          type: array
          items:
            type: number
            minimum: 1
        location:
          type: string
        datetimes:
          type: array
          items:
            type: object
            properties:
              start:
                type: string
                format: datetime
              end:
                type: string
                format: datetime
            required:
              - start
        published:
          type: boolean
          default: true
        completed:
          type: boolean
          default: false
        auto_notify_documents_enabled:
          type: boolean
          default: false
      required:
        - title
      example:
        title: ITシステムの構造
        speakers:
          - 1
        location: "2302"
        datetimes:
          - start: "2022-05-16T17:15:00+0900"
            end: "2022-05-16T18:00:00+0900"
          - start: "2022-05-17T17:15:00+0900"
            end: "2022-05-17T18:00:00+0900"
        published: true
        completed: false
        auto_notify_documents_enabled: true

    UpdateEventBody:
      type: object
      properties:
        title:
          type: string
        speakers:
          type: array
          items:
            type: number
            minimum: 1
        location:
          type: string
        datetimes:
          type: array
          items:
            type: object
            properties:
              start:
                type: string
                format: datetime
              end:
                type: string
                format: datetime
            required:
              - start
        published:
          type: boolean
        completed:
          type: boolean
        auto_notify_documents_enabled:
          type: boolean
      example:
        title: ITシステムの構造
        speakers:
          - 1
        location: "2302"
        datetimes:
          - start: "2022-05-16T17:15:00+0900"
            end: "2022-05-16T18:00:00+0900"
          - start: "2022-05-17T17:15:00+0900"
            end: "2022-05-17T18:00:00+0900"
        published: true
        completed: true
        auto_notify_documents_enabled: true

    EventDatetime:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        event_id:
          type: number
          minimum: 1
        start:
          type: string
          format: datetime
        end:
          type: string
          format: datetime
        participate_count:
          type: integer
          minimum: 0
      required:
        - id
        - event_id
        - start
        - end
      example:
        id: 1
        event_id: 1
        start: "2022-05-16T17:15:00+0900"
        end: "2022-05-16T18:00:00+0900"
        participate_count: 18

    EventParticipate:
      type: object
      properties:
        event_datetime_id:
          type: number
          minimum: 1
        user_id:
          type: number
          minimum: 1
      required:
        - event_datetime_id
        - user_id
      example:
        event_datetime_id: 1
        user_id: 1

    EventDocument:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        url:
          type: string
          format: uri
      required:
        - id
        - name
        - url
      example:
        id: 1
        name: スライド
        url: https://github.com/ecc-proken/StudyGroup/blob/main/20220516-it_system/slide.pdf

    CreateEventDocumentsBody:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: スライド
          url:
            type: string
            format: uri
        required:
          - name
          - url
        example:
          name: スライド
          url: https://github.com/ecc-proken/StudyGroup/blob/main/20220516-it_system/slide.pdf

  requestBodies:
    LoginBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginBody"
    CreateUserBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUserBody"
    OAuth2ConnectBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OAuth2ConnectBody"
    CreateUserOverOauth2Body:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateUserOverOauth2Body"
    UpdateUserBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateUserBody"
    CreateEventBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateEventBody"
    UpdateEventBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateEventBody"
    CreateEventDocumentsBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateEventDocumentsBody"

  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        example: 1
    event_datetime_id:
      name: event_datetime_id
      in: path
      required: true
      schema:
        type: integer
        example: 1
    oauth_providers:
      name: oauth_providers
      in: path
      required: true
      schema:
        type: string
        enum:
          - github

  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
